@model tstdealsv2.Models.tstproduct
@{
    ViewBag.Title = "Products";
    Layout = "~/Views/Shared/_LayoutVPanel.cshtml";
}

<h4 class="py-3 breadcrumb-wrapper mb-4">
    <span class="text-muted fw-light">Catalog /</span> Products
</h4>
<div class="card">
    <div class="card-datatable table-responsive pt-0">
        <table class="datatables-basic table table-bordered">
            <thead>
                <tr>
                    <th></th>
                    <th>Id</th>
                    <th>StoreId</th>
                    <th>ProductName</th>
                    <th>MetaKeywords</th>
                    <th>MetaTitle</th>
                    <th>Sku</th>
                    <th>Gtin</th>
                    <th>ProductTypeId</th>
                    <th>ShortDescription</th>
                    <th>FullDescription</th>
                    <th>MetaDescription</th>
                    <th>AllowCustomerReviews</th>
                    <th>ApprovedRatingSum</th>
                    <th>NotApprovedRatingSum</th>
                    <th>IsGiftCard</th>
                    <th>GiftCardTypeId</th>
                    <th>OverriddenGiftCardAmount</th>
                    <th>IsDownload</th>
                    <th>DownloadId</th>
                    <th>UnlimitedDownloads</th>
                    <th>MaxNumberOfDownloads</th>
                    <th>DownloadExpirationDays</th>
                    <th>DownloadActivationTypeId</th>
                    <th>HasSampleDownload</th>
                    <th>SampleDownloadId</th>
                    <th>HasUserAgreement</th>
                    <th>UserAgreementText</th>
                    <th>IsRecurring</th>
                    <th>RecurringCycleLength</th>
                    <th>RecurringCyclePeriodId</th>
                    <th>RecurringTotalCycles</th>
                    <th>IsRental</th>
                    <th>RentalPriceLength</th>
                    <th>IsTaxExempt</th>
                    <th>TaxCategoryId</th>
                    <th>StockQuantity</th>
                    <th>MinStockQuantity</th>
                    <th>AllowBackInStockSubscriptions</th>
                    <th>OrderMinimumQuantity</th>
                    <th>OrderMaximumQuantity</th>
                    <th>Price</th>
                    <th>OldPrice</th>
                    <th>ProductCost</th>
                    <th>CreatedOn</th>
                    <th>UpdatedOn</th>
                    <th>Action</th>
                </tr>
            </thead>
        </table>
    </div>
</div>
<!-- Modal to add new record -->
<div class="offcanvas offcanvas-end" id="offcanvasRecords">
    <div class="offcanvas-header border-bottom">
        <h5 class="offcanvas-title" id="offcanvasRecordsHeader">New Record</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas"
                aria-label="Close"></button>
    </div>
    <div class="offcanvas-body flex-grow-1">
        <form class="add-new-record pt-0 row g-2" id="formAddEdit" onsubmit="return false">
            @Html.EditorFor(m => m.Id, new { htmlAttributes = new { @class = "form-control d-none", @id = "txtId", @Value = "0" } })
            <div class="col-sm-12">
                <label class="form-label">Select Associated Store</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-user"></i></span>
                    @Html.EditorFor(m => m.StoreId, new { htmlAttributes = new { @class = "form-control", @id = "txtStoreId" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Product Name</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bxs-briefcase'></i></span>
                    @Html.EditorFor(m => m.ProductName, new { htmlAttributes = new { @class = "form-control", @id = "txtProductName" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Keywords</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.MetaKeywords, new { htmlAttributes = new { @class = "form-control", @id = "txtMetaKeywords" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Title</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bx-calendar'></i></span>
                    @Html.EditorFor(m => m.MetaTitle, new { htmlAttributes = new { @class = "form-control", @id = "txtMetaTitle" } })
                </div>
                <div class="form-text">
                    You can view other information below
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">SKU</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.Sku, new { htmlAttributes = new { @class = "form-control", @id = "txtSKU" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">GTIN</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bx-calendar'></i></span>
                    @Html.EditorFor(m => m.Gtin, new { htmlAttributes = new { @class = "form-control", @id = "txtGTIN"} })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Product Type</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bx-calendar'></i></span>
                    @Html.EditorFor(m => m.ProductTypeId, new { htmlAttributes = new { @class = "form-control", @id = "txtProductTypeId"} })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Short Description</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bx-calendar'></i></span>
                    @Html.EditorFor(m => m.ShortDescription, new { htmlAttributes = new { @class = "form-control", @id = "txtShortDescription"} })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Full Description</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.FullDescription, new { htmlAttributes = new { @class = "form-control", @id = "txtFullDescription" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Allow Customer Reviews</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.AllowCustomerReviews, new { htmlAttributes = new { @class = "form-control", @id = "txtAllowCustomerReviews" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Is Download?</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.IsDownload, new { htmlAttributes = new { @class = "form-control", @id = "txtIsDownload" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Maximum Number of Downloads</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.MaxNumberOfDownloads, new { htmlAttributes = new { @class = "form-control", @id = "txtMaxDownloads" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Download Expiration Days</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.DownloadExpirationDays, new { htmlAttributes = new { @class = "form-control", @id = "txtDownloadExpirationDays" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Sample Download</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.SampleDownloadId, new { htmlAttributes = new { @class = "form-control", @id = "txtSampleDownloadId" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">User Agreement text</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.UserAgreementText, new { htmlAttributes = new { @class = "form-control", @id = "txtUserAgreementText" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Is Recurring?</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.IsRecurring, new { htmlAttributes = new { @class = "form-control", @id = "txtIsRecurring" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Recurring Cycle Length</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.RecurringCycleLength, new { htmlAttributes = new { @class = "form-control", @id = "txtRecurringCycleLength" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Recurring Total Cycles</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.RecurringTotalCycles, new { htmlAttributes = new { @class = "form-control", @id = "txtRecurringTotalCycles" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Is Rental?</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.IsRental, new { htmlAttributes = new { @class = "form-control", @id = "txtIsRental" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Rental Price Length</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.RentalPriceLength, new { htmlAttributes = new { @class = "form-control", @id = "txtRentalPriceLength" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Current Price</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.Price, new { htmlAttributes = new { @class = "form-control", @id = "txtCurrentPrice" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Previous Price</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.OldPrice, new { htmlAttributes = new { @class = "form-control", @id = "txtOldPrice" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Product Cost</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.ProductCost, new { htmlAttributes = new { @class = "form-control", @id = "txtProductCost" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Created On</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.CreatedOn, new { htmlAttributes = new { @class = "form-control", @id = "txtCreatedOn" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Updated On</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.UpdatedOn, new { htmlAttributes = new { @class = "form-control", @id = "txtModifiedOn" } })
                </div>
            </div>
            <div class="col-sm-12">
                <button type="submit" class="btn btn-primary data-submit me-sm-3 me-1" onclick="SubmitMVM();">Save</button>
                <button type="reset" class="btn btn-outline-secondary" data-bs-dismiss="offcanvas">Cancel</button>
            </div>
        </form>
    </div>
</div>

<!-- Modal to delete record -->
<div class="modal fade" id="modalDeleteRecord" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-simple modal-enable-otp modal-dialog-centered">
        <div class="modal-content p-3 p-md-5">
            <div class="modal-body">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <div class="text-center mb-4">
                    <h3 class="mb-4">Delete Confirmation</h3>
                </div>
                <h6>Are you sure you want to delete this record?</h6>
                <form id="formDeleteRecord" class="row g-3 mt-3" onsubmit="return false">
                    @Html.EditorFor(d => d.Id, new { htmlAttributes = new { @class = "form-control d-none", @readonly = true, @Value="0", @id="ctlId" } })
                    <div class="col-12 text-center">
                        <button type="submit" class="btn btn-danger me-sm-3 me-1" onclick="DeleteMVM();">Delete</button>
                        <button type="reset" class="btn btn-label-secondary" data-bs-dismiss="modal" aria-label="Close">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/assets/scripts/api/vCatalogProducts.js"></script>


}

