@model tstdealsv2.Models.tstproducts_orders

@{
    ViewBag.Title = "Orders";
    Layout = "~/Views/Shared/_LayoutVPanel.cshtml";
}

<h4 class="py-3 breadcrumb-wrapper mb-4">
    <span class="text-muted fw-light">Sales /</span> Orders
</h4>
<div class="card">
    <div class="card-datatable table-responsive pt-0">
        <table class="datatables-basic table table-bordered">
            <thead>
                <tr>
                    <th></th>
                    <th>Id</th>
                    <th>CustomOrderNumber</th>
                    <th>CustomerId</th>
                    <th>StoreId</th>
                    <th>PaymentStatusId</th>
                    <th>PaymentMethodSystemName</th>
                    <th>CustomerCurrencyCode</th>
                    <th>CurrencyRate</th>
                    <th>OrderSubtotalInclTax</th>
                    <th>OrderSubtotalExclTax</th>
                    <th>OrderSubTotalDiscountInclTax</th>
                    <th>OrderSubTotalDiscountExclTax</th>
                    <th>PaymentMethodAdditionalFeeInclTax</th>
                    <th>PaymentMethodAdditionalFeeExclTax</th>
                    <th>TaxRates</th>
                    <th>OrderTax</th>
                    <th>OrderDiscount</th>
                    <th>OrderTotal</th>
                    <th>RefundedAmount</th>
                    <th>AffiliateId</th>
                    <th>BankCardId</th>
                    <th>AuthorizationTransactionId</th>
                    <th>AuthorizationTransactionCode</th>
                    <th>AuthorizationTransactionResult</th>
                    <th>CaptureTransactionId</th>
                    <th>CaptureTransactionResult</th>
                    <th>SubscriptionTransactionId</th>
                    <th>PaidDate</th>
                    <th>CreatedOn</th>
                    <th>Action</th>
                </tr>
            </thead>
        </table>
    </div>
</div>
<!-- Modal to add new record -->
<div class="offcanvas offcanvas-end" id="offcanvasRecords">
    <div class="offcanvas-header border-bottom">
        <h5 class="offcanvas-title" id="offcanvasRecordsHeader">New Record</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas"
                aria-label="Close"></button>
    </div>
    <div class="offcanvas-body flex-grow-1">
        <form class="add-new-record pt-0 row g-2" id="formAddEdit" onsubmit="return false">
            @Html.EditorFor(m => m.Id, new { htmlAttributes = new { @class = "form-control d-none", @id = "txtId", @Value = "0" } })
            <div class="col-sm-12">
                <label class="form-label">Custom Order Number</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-user"></i></span>
                    @Html.EditorFor(m => m.CustomOrderNumber, new { htmlAttributes = new { @class = "form-control", @id = "txtOrderNumber" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Customer ID</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bxs-briefcase'></i></span>
                    @Html.EditorFor(m => m.CustomerId, new { htmlAttributes = new { @class = "form-control", @id = "txtCustomerId" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Store ID</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.StoreId, new { htmlAttributes = new { @class = "form-control", @id = "txtStoreId" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Payment Status ID</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bx-calendar'></i></span>
                    @Html.EditorFor(m => m.PaymentStatusId, new { htmlAttributes = new { @class = "form-control", @id = "txtPaymentStatus" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Payment Method</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bxs-briefcase'></i></span>
                    @Html.EditorFor(m => m.PaymentMethodSystemName, new { htmlAttributes = new { @class = "form-control", @id = "txtPaymentMethod" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Customer Currency Code</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bxs-briefcase'></i></span>
                    @Html.EditorFor(m => m.CustomerCurrencyCode, new { htmlAttributes = new { @class = "form-control", @id = "txtCurrencyCode" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Currency Rate</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bxs-briefcase'></i></span>
                    @Html.EditorFor(m => m.CurrencyRate, new { htmlAttributes = new { @class = "form-control", @id = "txtCurrencyRate" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Order Discount</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bxs-briefcase'></i></span>
                    @Html.EditorFor(m => m.OrderDiscount, new { htmlAttributes = new { @class = "form-control", @id = "txtOrderDiscount" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Order Tax</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bxs-briefcase'></i></span>
                    @Html.EditorFor(m => m.OrderTax, new { htmlAttributes = new { @class = "form-control", @id = "txtOrderTax" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Order Subtotal Excluding VAT</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bxs-briefcase'></i></span>
                    @Html.EditorFor(m => m.OrderSubtotalExclTax, new { htmlAttributes = new { @class = "form-control", @id = "txtOrderTotalExcVat" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Order Subtotal Including VAT</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bxs-briefcase'></i></span>
                    @Html.EditorFor(m => m.OrderSubtotalInclTax, new { htmlAttributes = new { @class = "form-control", @id = "txtOrderTotalIncVat" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Refunded Amount</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bxs-briefcase'></i></span>
                    @Html.EditorFor(m => m.RefundedAmount, new { htmlAttributes = new { @class = "form-control", @id = "txtRefundAmount" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Affiliate ID</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bxs-briefcase'></i></span>
                    @Html.EditorFor(m => m.AffiliateId, new { htmlAttributes = new { @class = "form-control", @id = "txtAffiliateId" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Bank Card ID</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bxs-briefcase'></i></span>
                    @Html.EditorFor(m => m.BankCardId, new { htmlAttributes = new { @class = "form-control", @id = "txtBankCardId" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Capture Transaction ID</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bxs-briefcase'></i></span>
                    @Html.EditorFor(m => m.CaptureTransactionId, new { htmlAttributes = new { @class = "form-control", @id = "txtCapTransId" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Subscription Transaction ID</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bxs-briefcase'></i></span>
                    @Html.EditorFor(m => m.SubscriptionTransactionId, new { htmlAttributes = new { @class = "form-control", @id = "txtSubTransId" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Paid Date</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bxs-briefcase'></i></span>
                    @Html.EditorFor(m => m.PaidDate, new { htmlAttributes = new { @class = "form-control", @id = "txtPaidDate" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Created On</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bxs-briefcase'></i></span>
                    @Html.EditorFor(m => m.CreatedOn, new { htmlAttributes = new { @class = "form-control", @id = "txtCreatedOn" } })
                </div>
            </div>
            <div class="col-sm-12">
                <button type="submit" class="btn btn-primary data-submit me-sm-3 me-1" onclick="SubmitMVM();">Save</button>
                <button type="reset" class="btn btn-outline-secondary" data-bs-dismiss="offcanvas">Cancel</button>
            </div>
        </form>
    </div>
</div>

<!-- Modal to delete record -->
<div class="modal fade" id="modalDeleteRecord" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-simple modal-enable-otp modal-dialog-centered">
        <div class="modal-content p-3 p-md-5">
            <div class="modal-body">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <div class="text-center mb-4">
                    <h3 class="mb-4">Delete Confirmation</h3>
                </div>
                <h6>Are you sure you want to delete this record?</h6>
                <form id="formDeleteRecord" class="row g-3 mt-3" onsubmit="return false">
                    @Html.EditorFor(d => d.Id, new { htmlAttributes = new { @class = "form-control d-none", @readonly = true, @Value="0", @id="ctlId" } })
                    <div class="col-12 text-center">
                        <button type="submit" class="btn btn-danger me-sm-3 me-1" onclick="DeleteMVM();">Delete</button>
                        <button type="reset" class="btn btn-label-secondary" data-bs-dismiss="modal" aria-label="Close">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/assets/scripts/api/vSalesOrders.js"></script>


}

