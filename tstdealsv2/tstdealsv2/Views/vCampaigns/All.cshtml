@model tstdealsv2.Models.tstcampaign

@{
    ViewBag.Title = "All";
    Layout = "~/Views/Shared/_LayoutVPanel.cshtml";
}

<h4 class="py-3 breadcrumb-wrapper mb-4">
    <span class="text-muted fw-light">Campaigns /</span> All
</h4>
<div class="card">
    <div class="card-datatable table-responsive pt-0">
        <table class="datatables-basic table table-bordered">
            <thead>
                <tr>
                    <th></th>
                    <th>Id</th>
                    <th>Name</th>
                    <th>Subject</th>
                    <th>Body</th>
                    <th>Category</th>
                    <th>Location</th>
                    <th>CampaignStatus</th>
                    <th>ExpectedRevenue</th>
                    <th>BudgetCost</th>
                    <th>ActualCost</th>
                    <th>ExpectedResponse</th>
                    <th>NumberSent</th>
                    <th>Sponsor</th>
                    <th>TargetAudience</th>
                    <th>TargetSize</th>
                    <th>ExpectedResponseCount</th>
                    <th>ExpectedSalesCount</th>
                    <th>ExpectedROI</th>
                    <th>ActualResponseCount</th>
                    <th>ActualSalesCount</th>
                    <th>ActualROI</th>
                    <th>ClosingDate</th>
                    <th>Likes</th>
                    <th>Views</th>
                    <th>Shares</th>
                    <th>Action</th>
                </tr>
            </thead>
        </table>
    </div>
</div>
<!-- Modal to add new record -->
<div class="offcanvas offcanvas-end" id="offcanvasRecords">
    <div class="offcanvas-header border-bottom">
        <h5 class="offcanvas-title" id="offcanvasRecordsHeader">New Record</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas"
                aria-label="Close"></button>
    </div>
    <div class="offcanvas-body flex-grow-1">
        <form class="add-new-record pt-0 row g-2" id="formAddEdit" onsubmit="return false">
            @Html.EditorFor(m => m.Id, new { htmlAttributes = new { @class = "form-control d-none", @id = "txtId", @Value = "0" } })
            <div class="col-sm-12">
                <label class="form-label">Campaign Title</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-user"></i></span>
                    @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control", @id = "txtName" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Subject</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bxs-briefcase'></i></span>
                    @Html.EditorFor(m => m.Subject, new { htmlAttributes = new { @class = "form-control", @id = "txtSubject" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Body</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.Body, new { htmlAttributes = new { @class = "form-control", @id = "txtBody" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Category</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bx-calendar'></i></span>
                    @Html.EditorFor(m => m.Category, new { htmlAttributes = new { @class = "form-control", @id = "txtCategory" } })
                </div>
                <div class="form-text">
                    You can view other information below
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Location</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.Location, new { htmlAttributes = new { @class = "form-control", @id = "txtLocation" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Status</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.CampaignStatus, new { htmlAttributes = new { @class = "form-control", @id = "txtCampaignStatus" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Expected Revenue</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.ExpectedRevenue, new { htmlAttributes = new { @class = "form-control", @id = "txtExpectedRevenue" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Budget Cost</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.BudgetCost, new { htmlAttributes = new { @class = "form-control", @id = "txtBudgetCost" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Actual Cost</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.ActualCost, new { htmlAttributes = new { @class = "form-control", @id = "txtActualCost" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Expected Response</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.ExpectedResponse, new { htmlAttributes = new { @class = "form-control", @id = "txtExpectedResponse" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Number Sent</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.NumberSent, new { htmlAttributes = new { @class = "form-control", @id = "txtNumberSent" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Sponsor</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.Sponsor, new { htmlAttributes = new { @class = "form-control", @id = "txtSponsor" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Target Audience</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.TargetAudience, new { htmlAttributes = new { @class = "form-control", @id = "txtTargetAudience" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Target Size</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.TargetSize, new { htmlAttributes = new { @class = "form-control", @id = "txtTargetSize" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Expected Response Count</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.ExpectedResponseCount, new { htmlAttributes = new { @class = "form-control", @id = "txtExpectedResponseCount" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Expected Sales Count</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.ExpectedSalesCount, new { htmlAttributes = new { @class = "form-control", @id = "txtExpectedSalesCount" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Expected ROI</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.ExpectedROI, new { htmlAttributes = new { @class = "form-control", @id = "txtExpectedROI" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Actual Response Count</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.ActualResponseCount, new { htmlAttributes = new { @class = "form-control", @id = "txtActualResponseCount" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Actual Sales Count</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.ActualSalesCount, new { htmlAttributes = new { @class = "form-control", @id = "txtActualSalesCount" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Actual ROI</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.ActualROI, new { htmlAttributes = new { @class = "form-control", @id = "txtActualROI" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Closing Date</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class="bx bx-envelope"></i></span>
                    @Html.EditorFor(m => m.ClosingDate, new { htmlAttributes = new { @class = "form-control", @id = "txtClosingDate" } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Likes</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bx-calendar'></i></span>
                    @Html.EditorFor(m => m.Likes, new { htmlAttributes = new { @class = "form-control", @id = "txtLikes", @readonly = true } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Views</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bx-calendar'></i></span>
                    @Html.EditorFor(m => m.Views, new { htmlAttributes = new { @class = "form-control", @id = "txtViews", @readonly = true } })
                </div>
            </div>
            <div class="col-sm-12">
                <label class="form-label">Shares</label>
                <div class="input-group input-group-merge">
                    <span class="input-group-text"><i class='bx bx-calendar'></i></span>
                    @Html.EditorFor(m => m.Shares, new { htmlAttributes = new { @class = "form-control", @id = "txtShares", @readonly = true } })
                </div>
            </div>
            <div class="col-sm-12">
                <button type="submit" class="btn btn-primary data-submit me-sm-3 me-1" onclick="SubmitMVM();">Save</button>
                <button type="reset" class="btn btn-outline-secondary" data-bs-dismiss="offcanvas">Cancel</button>
            </div>
        </form>
    </div>
</div>

<!-- Modal to delete record -->
<div class="modal fade" id="modalDeleteRecord" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-simple modal-enable-otp modal-dialog-centered">
        <div class="modal-content p-3 p-md-5">
            <div class="modal-body">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <div class="text-center mb-4">
                    <h3 class="mb-4">Delete Confirmation</h3>
                </div>
                <h6>Are you sure you want to delete this record?</h6>
                <form id="formDeleteRecord" class="row g-3 mt-3" onsubmit="return false">
                    @Html.EditorFor(d => d.Id, new { htmlAttributes = new { @class = "form-control d-none", @readonly = true, @Value="0", @id="ctlId" } })
                    <div class="col-12 text-center">
                        <button type="submit" class="btn btn-danger me-sm-3 me-1" onclick="DeleteMVM();">Delete</button>
                        <button type="reset" class="btn btn-label-secondary" data-bs-dismiss="modal" aria-label="Close">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/assets/scripts/api/vCampaigns.js"></script>


}

